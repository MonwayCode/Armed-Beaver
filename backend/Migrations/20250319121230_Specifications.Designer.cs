// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(TankDbContext))]
    [Migration("20250319121230_Specifications")]
    partial class Specifications
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("AmmunitionType", b =>
                {
                    b.Property<int>("AmmunitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AmmunitionName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AmmunitionTypeName")
                        .HasColumnType("TEXT");

                    b.Property<int>("GunId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AmmunitionId");

                    b.HasIndex("GunId");

                    b.ToTable("AmmunitionTypes", (string)null);
                });

            modelBuilder.Entity("ArmorSpecification", b =>
                {
                    b.Property<int>("ArmorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("HullFront")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HullRear")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HullSide")
                        .HasColumnType("TEXT");

                    b.Property<int>("SpecificationId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TurretFront")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TurretRear")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TurretSide")
                        .HasColumnType("TEXT");

                    b.HasKey("ArmorId");

                    b.HasIndex("SpecificationId")
                        .IsUnique();

                    b.ToTable("ArmorSpecifications", (string)null);
                });

            modelBuilder.Entity("GunSpecification", b =>
                {
                    b.Property<int>("GunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmmunitionCount")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Caliber")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Depression")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ElevationSpeed")
                        .HasColumnType("TEXT");

                    b.Property<string>("GunName")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ReloadTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("SpecificationId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TurretRotationSpeed")
                        .HasColumnType("TEXT");

                    b.HasKey("GunId");

                    b.HasIndex("SpecificationId")
                        .IsUnique();

                    b.ToTable("GunSpecifications", (string)null);
                });

            modelBuilder.Entity("Tank", b =>
                {
                    b.Property<int>("TankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Era")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model3DPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("TankId");

                    b.ToTable("Tanks", (string)null);
                });

            modelBuilder.Entity("TankSpecification", b =>
                {
                    b.Property<int>("SpecificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CrewCount")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("EnginePower")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MaxBackwardSpeed")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MaxForwardSpeed")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PowerToWeightRatio")
                        .HasColumnType("TEXT");

                    b.Property<int>("TankId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("SpecificationId");

                    b.HasIndex("TankId")
                        .IsUnique();

                    b.ToTable("TankSpecifications", (string)null);
                });

            modelBuilder.Entity("AmmunitionType", b =>
                {
                    b.HasOne("GunSpecification", "Gun")
                        .WithMany("AmmunitionTypes")
                        .HasForeignKey("GunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gun");
                });

            modelBuilder.Entity("ArmorSpecification", b =>
                {
                    b.HasOne("TankSpecification", "Specifications")
                        .WithOne("Armor")
                        .HasForeignKey("ArmorSpecification", "SpecificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specifications");
                });

            modelBuilder.Entity("GunSpecification", b =>
                {
                    b.HasOne("TankSpecification", "Specifications")
                        .WithOne("Gun")
                        .HasForeignKey("GunSpecification", "SpecificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specifications");
                });

            modelBuilder.Entity("TankSpecification", b =>
                {
                    b.HasOne("Tank", "Tank")
                        .WithOne("Specifications")
                        .HasForeignKey("TankSpecification", "TankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tank");
                });

            modelBuilder.Entity("GunSpecification", b =>
                {
                    b.Navigation("AmmunitionTypes");
                });

            modelBuilder.Entity("Tank", b =>
                {
                    b.Navigation("Specifications");
                });

            modelBuilder.Entity("TankSpecification", b =>
                {
                    b.Navigation("Armor");

                    b.Navigation("Gun");
                });
#pragma warning restore 612, 618
        }
    }
}
