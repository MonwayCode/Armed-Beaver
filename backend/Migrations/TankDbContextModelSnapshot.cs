// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(TankDbContext))]
    partial class TankDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("Tank", b =>
                {
                    b.Property<int>("TankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Era")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model3DPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("TankId");

                    b.ToTable("Tanks", (string)null);
                });

            modelBuilder.Entity("TankSpecification", b =>
                {
                    b.Property<int>("SpecificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ammunition")
                        .HasColumnType("TEXT");

                    b.Property<string>("Crew")
                        .HasColumnType("TEXT");

                    b.Property<string>("Engine")
                        .HasColumnType("TEXT");

                    b.Property<string>("FrontArmor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gun")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaxSpeed")
                        .HasColumnType("TEXT");

                    b.Property<string>("RearArmor")
                        .HasColumnType("TEXT");

                    b.Property<string>("SideArmor")
                        .HasColumnType("TEXT");

                    b.Property<int>("TankId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("SpecificationId");

                    b.HasIndex("TankId")
                        .IsUnique();

                    b.ToTable("TankSpecifications", (string)null);
                });

            modelBuilder.Entity("TankSpecification", b =>
                {
                    b.HasOne("Tank", "Tank")
                        .WithOne("Specifications")
                        .HasForeignKey("TankSpecification", "TankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tank");
                });

            modelBuilder.Entity("Tank", b =>
                {
                    b.Navigation("Specifications");
                });
#pragma warning restore 612, 618
        }
    }
}
